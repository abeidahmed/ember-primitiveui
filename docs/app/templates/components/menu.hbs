{{page-title "Menu"}}

<ArticleContainer
  @title="Menu (Dropdown)"
  @description="An accessible menu component that you can extend to build robust custom menus with full-fledged keyboard support and aria attributes."
  @demoSrc="/examples/menu"
>
  {{format-markdown
    '
## Important
The `Menu` component uses the `Portal` component to append its contents into the `body`, hence you will need to add the
following code in your `config/environment.js` file for it to work properly.

```js
let ENV = {
  APP: {
    primitiveUI: {
      portalElement: \'#portal\',
    },
  };

  if (environment === \'test\') {
    ENV.APP.primitiveUI.portalElement = ENV.APP.rootElement;
  }
}
```

## Usage

Menu is built using the `menu`, `menu.Button`, `menu.List`, and `menu.Item` components. Opening/closing the `menu.List`
is handled automatically. Here is a list of all the scenarios:
- Opens/closes the menu when `menu.Button` is clicked.
- Closes the menu when clicked outside the `menu` component.
- Closes the menu when focus moves outside the `menu` component.

```hbs
<Menu as |menu|>
  <menu.Button>Toggle menu</menu.Button>
  <menu.List>
    <menu.Item as |item|>
      Account settings {{if item.active "(active)"}}
    </menu.Item>

    <menu.Item @disabled={{true}} as |item|>
      Help {{if item.active "(active)"}}
    </menu.Item>

    <menu.Item as |item|>
      Guides {{if item.active "(active)"}}
    </menu.Item>
  </menu.List>
</Menu>
```

## Styling the active item

Each `menu.Item` yields `active` getter which is true when the item is active, otherwise false.

```hbs
<menu.Item as |item|>
  <span class="w-full {{if item.active "text-gray-700" "text-gray-300"}}">
    Account
  </span>
</menu.Item>
```

## Disabling an item

Set `@disabled={{true}}` argument to the `menu.Item` component. This will make it unselectable via keyboard navigation,
and it will be skipped when pressing the up/down arrows.

```diff
- <menu.Item as |item|>Account</menu.Item>
+ <menu.Item @disabled={{true}} as |item|>Account</menu.Item>
```

## Integrating with `LinkTo` component

Pass the `LinkTo` component to the `@as` argument and it will automatically redirect to the page and will also close
the menu.

```hbs
<menu.Item @as={{component "link-to" route="about" query=(...) model="..."}} as |item|>
  About page
</menu.Item>
```

## Focus management

Clicking the `menu.Button` toggles the menu and focuses the `menu.List` component. Pressing `Tab` when inside the
`menu.List` will close the menu and focus returns to `menu.Button` component.

## Mouse interaction

Clicking anywhere outside of an open menu will close that menu and focus returns to the `menu.Button` component.

## Keyboard interaction

| Command      | Description |
| ---        |    ----   |
| `Enter` when `menu.Button` is focused      | Opens the menu and activates the first non-disabled `menu.Item`.       |
| `Space` when `menu.Button` is focused      | Opens the menu and activates the first non-disabled `menu.Item`.       |
| `ArrowDown` when `menu.Button` is focused      | Opens the menu and activates the first non-disabled `menu.Item`.       |
| `ArrowUp` when `menu.Button` is focused      | Opens the menu and activates the last non-disabled `menu.Item`.       |
| `Esc`   | Closes any open menus.        |
| `ArrowDown` when menu is open   | Activates next non-disabled `menu.Item`.        |
| `ArrowUp` when menu is open   | Activates previous non-disabled `menu.Item`.        |

## Component API

### menu

| Argument      | Default | Description |
| ---        |    ----   | ---- |
| `as`   | `div`        | `string` |

### menu.Button

| Argument      | Default | Description |
| ---        |    ----   | ---- |
| `as`   | `button`        | `string` |

### menu.List

| Argument      | Default | Description |
| ---        |    ----   | ---- |
| `as`   | `div`        | `string` |
| `portal`   | `true`        | `boolean`. Setting it to `false` will not render the component inside a portal.  |

### menu.Item

| Argument      | Default | Description |
| ---        |    ----   | ---- |
| `as`   | `button`        | `string \| typeof Component` |
| `disabled`   | `false`        | `boolean`. Whether or not the `menu.Item` is disabled. |

| Yields      | Description |
| ---        |   ---- |
| `active`   |  `boolean`. Whether or not the `menu.Item` is currently active. |
'
  }}
</ArticleContainer>
